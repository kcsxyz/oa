<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oa.dao.ProcessNodeMapper">
  <resultMap id="BaseResultMap" type="com.oa.bean.ProcessNode">
    <id column="process_node_id" jdbcType="INTEGER" property="processNodeId" />
    <result column="process_no" jdbcType="VARCHAR" property="processNo" />
    <result column="process_node_name" jdbcType="VARCHAR" property="processNodeName" />
    <result column="process_node_role" jdbcType="VARCHAR" property="processNodeRole" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    process_node_id, process_no, process_node_name, process_node_role, remark
  </sql>
  <select id="selectByExample" parameterType="com.oa.bean.ProcessNodeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_process_node
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_process_node
    where process_node_id = #{processNodeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_process_node
    where process_node_id = #{processNodeId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.oa.bean.ProcessNodeExample">
    delete from t_process_node
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.oa.bean.ProcessNode">
    insert into t_process_node (process_node_id, process_no, process_node_name, 
      process_node_role, remark)
    values (#{processNodeId,jdbcType=INTEGER}, #{processNo,jdbcType=VARCHAR}, #{processNodeName,jdbcType=VARCHAR}, 
      #{processNodeRole,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.oa.bean.ProcessNode">
    insert into t_process_node
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="processNodeId != null">
        process_node_id,
      </if>
      <if test="processNo != null">
        process_no,
      </if>
      <if test="processNodeName != null">
        process_node_name,
      </if>
      <if test="processNodeRole != null">
        process_node_role,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="processNodeId != null">
        #{processNodeId,jdbcType=INTEGER},
      </if>
      <if test="processNo != null">
        #{processNo,jdbcType=VARCHAR},
      </if>
      <if test="processNodeName != null">
        #{processNodeName,jdbcType=VARCHAR},
      </if>
      <if test="processNodeRole != null">
        #{processNodeRole,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.oa.bean.ProcessNodeExample" resultType="java.lang.Long">
    select count(*) from t_process_node
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_process_node
    <set>
      <if test="record.processNodeId != null">
        process_node_id = #{record.processNodeId,jdbcType=INTEGER},
      </if>
      <if test="record.processNo != null">
        process_no = #{record.processNo,jdbcType=VARCHAR},
      </if>
      <if test="record.processNodeName != null">
        process_node_name = #{record.processNodeName,jdbcType=VARCHAR},
      </if>
      <if test="record.processNodeRole != null">
        process_node_role = #{record.processNodeRole,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_process_node
    set process_node_id = #{record.processNodeId,jdbcType=INTEGER},
      process_no = #{record.processNo,jdbcType=VARCHAR},
      process_node_name = #{record.processNodeName,jdbcType=VARCHAR},
      process_node_role = #{record.processNodeRole,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.oa.bean.ProcessNode">
    update t_process_node
    <set>
      <if test="processNo != null">
        process_no = #{processNo,jdbcType=VARCHAR},
      </if>
      <if test="processNodeName != null">
        process_node_name = #{processNodeName,jdbcType=VARCHAR},
      </if>
      <if test="processNodeRole != null">
        process_node_role = #{processNodeRole,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where process_node_id = #{processNodeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.oa.bean.ProcessNode">
    update t_process_node
    set process_no = #{processNo,jdbcType=VARCHAR},
      process_node_name = #{processNodeName,jdbcType=VARCHAR},
      process_node_role = #{processNodeRole,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where process_node_id = #{processNodeId,jdbcType=INTEGER}
  </update>

<select id="getProcessNodeId" parameterType="java.util.Map" resultType="java.lang.Integer">
    select process_node_id  from t_process_node where process_no = #{processNo} and process_node_role=#{roleName}
    
  </select>
</mapper>