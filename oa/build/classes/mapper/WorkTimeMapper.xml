<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oa.dao.WorkTimeMapper">
  <resultMap id="BaseResultMap" type="com.oa.bean.WorkTime">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="attend_mor_start_time" jdbcType="TIMESTAMP" property="attendMorStartTime" />
    <result column="attend_mor_end_time" jdbcType="TIMESTAMP" property="attendMorEndTime" />
    <result column="work_mor_start_time" jdbcType="TIMESTAMP" property="workMorStartTime" />
    <result column="work_mor_end_time" jdbcType="TIMESTAMP" property="workMorEndTime" />
    <result column="attend_mor_leave_start_time" jdbcType="TIMESTAMP" property="attendMorLeaveStartTime" />
    <result column="attend_mor_leave_end_time" jdbcType="TIMESTAMP" property="attendMorLeaveEndTime" />
    <result column="attend_afternoon_start_time" jdbcType="TIMESTAMP" property="attendAfternoonStartTime" />
    <result column="attend_afternoon_end_time" jdbcType="TIMESTAMP" property="attendAfternoonEndTime" />
    <result column="work_start_time_afternoon" jdbcType="TIMESTAMP" property="workStartTimeAfternoon" />
    <result column="work_end_time_afternoon" jdbcType="TIMESTAMP" property="workEndTimeAfternoon" />
    <result column="attend_after_leave_start_time" jdbcType="TIMESTAMP" property="attendAfterLeaveStartTime" />
    <result column="attend_after_leave_end_time" jdbcType="TIMESTAMP" property="attendAfterLeaveEndTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, attend_mor_start_time, attend_mor_end_time, work_mor_start_time, work_mor_end_time, 
    attend_mor_leave_start_time, attend_mor_leave_end_time, attend_afternoon_start_time, 
    attend_afternoon_end_time, work_start_time_afternoon, work_end_time_afternoon, attend_after_leave_start_time, 
    attend_after_leave_end_time, create_time, status
  </sql>
  <select id="selectByExample" parameterType="com.oa.bean.WorkTimeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_work_time
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_work_time
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_work_time
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.oa.bean.WorkTimeExample">
    delete from t_work_time
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.oa.bean.WorkTime">
    insert into t_work_time (id, attend_mor_start_time, attend_mor_end_time, 
      work_mor_start_time, work_mor_end_time, attend_mor_leave_start_time, 
      attend_mor_leave_end_time, attend_afternoon_start_time, 
      attend_afternoon_end_time, work_start_time_afternoon, 
      work_end_time_afternoon, attend_after_leave_start_time, 
      attend_after_leave_end_time, create_time, 
      status)
    values (#{id,jdbcType=INTEGER}, #{attendMorStartTime,jdbcType=TIMESTAMP}, #{attendMorEndTime,jdbcType=TIMESTAMP}, 
      #{workMorStartTime,jdbcType=TIMESTAMP}, #{workMorEndTime,jdbcType=TIMESTAMP}, #{attendMorLeaveStartTime,jdbcType=TIMESTAMP}, 
      #{attendMorLeaveEndTime,jdbcType=TIMESTAMP}, #{attendAfternoonStartTime,jdbcType=TIMESTAMP}, 
      #{attendAfternoonEndTime,jdbcType=TIMESTAMP}, #{workStartTimeAfternoon,jdbcType=TIMESTAMP}, 
      #{workEndTimeAfternoon,jdbcType=TIMESTAMP}, #{attendAfterLeaveStartTime,jdbcType=TIMESTAMP}, 
      #{attendAfterLeaveEndTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.oa.bean.WorkTime">
    insert into t_work_time
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="attendMorStartTime != null">
        attend_mor_start_time,
      </if>
      <if test="attendMorEndTime != null">
        attend_mor_end_time,
      </if>
      <if test="workMorStartTime != null">
        work_mor_start_time,
      </if>
      <if test="workMorEndTime != null">
        work_mor_end_time,
      </if>
      <if test="attendMorLeaveStartTime != null">
        attend_mor_leave_start_time,
      </if>
      <if test="attendMorLeaveEndTime != null">
        attend_mor_leave_end_time,
      </if>
      <if test="attendAfternoonStartTime != null">
        attend_afternoon_start_time,
      </if>
      <if test="attendAfternoonEndTime != null">
        attend_afternoon_end_time,
      </if>
      <if test="workStartTimeAfternoon != null">
        work_start_time_afternoon,
      </if>
      <if test="workEndTimeAfternoon != null">
        work_end_time_afternoon,
      </if>
      <if test="attendAfterLeaveStartTime != null">
        attend_after_leave_start_time,
      </if>
      <if test="attendAfterLeaveEndTime != null">
        attend_after_leave_end_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="attendMorStartTime != null">
        #{attendMorStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="attendMorEndTime != null">
        #{attendMorEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="workMorStartTime != null">
        #{workMorStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="workMorEndTime != null">
        #{workMorEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="attendMorLeaveStartTime != null">
        #{attendMorLeaveStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="attendMorLeaveEndTime != null">
        #{attendMorLeaveEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="attendAfternoonStartTime != null">
        #{attendAfternoonStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="attendAfternoonEndTime != null">
        #{attendAfternoonEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="workStartTimeAfternoon != null">
        #{workStartTimeAfternoon,jdbcType=TIMESTAMP},
      </if>
      <if test="workEndTimeAfternoon != null">
        #{workEndTimeAfternoon,jdbcType=TIMESTAMP},
      </if>
      <if test="attendAfterLeaveStartTime != null">
        #{attendAfterLeaveStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="attendAfterLeaveEndTime != null">
        #{attendAfterLeaveEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.oa.bean.WorkTimeExample" resultType="java.lang.Long">
    select count(*) from t_work_time
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_work_time
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.attendMorStartTime != null">
        attend_mor_start_time = #{record.attendMorStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.attendMorEndTime != null">
        attend_mor_end_time = #{record.attendMorEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.workMorStartTime != null">
        work_mor_start_time = #{record.workMorStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.workMorEndTime != null">
        work_mor_end_time = #{record.workMorEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.attendMorLeaveStartTime != null">
        attend_mor_leave_start_time = #{record.attendMorLeaveStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.attendMorLeaveEndTime != null">
        attend_mor_leave_end_time = #{record.attendMorLeaveEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.attendAfternoonStartTime != null">
        attend_afternoon_start_time = #{record.attendAfternoonStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.attendAfternoonEndTime != null">
        attend_afternoon_end_time = #{record.attendAfternoonEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.workStartTimeAfternoon != null">
        work_start_time_afternoon = #{record.workStartTimeAfternoon,jdbcType=TIMESTAMP},
      </if>
      <if test="record.workEndTimeAfternoon != null">
        work_end_time_afternoon = #{record.workEndTimeAfternoon,jdbcType=TIMESTAMP},
      </if>
      <if test="record.attendAfterLeaveStartTime != null">
        attend_after_leave_start_time = #{record.attendAfterLeaveStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.attendAfterLeaveEndTime != null">
        attend_after_leave_end_time = #{record.attendAfterLeaveEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_work_time
    set id = #{record.id,jdbcType=INTEGER},
      attend_mor_start_time = #{record.attendMorStartTime,jdbcType=TIMESTAMP},
      attend_mor_end_time = #{record.attendMorEndTime,jdbcType=TIMESTAMP},
      work_mor_start_time = #{record.workMorStartTime,jdbcType=TIMESTAMP},
      work_mor_end_time = #{record.workMorEndTime,jdbcType=TIMESTAMP},
      attend_mor_leave_start_time = #{record.attendMorLeaveStartTime,jdbcType=TIMESTAMP},
      attend_mor_leave_end_time = #{record.attendMorLeaveEndTime,jdbcType=TIMESTAMP},
      attend_afternoon_start_time = #{record.attendAfternoonStartTime,jdbcType=TIMESTAMP},
      attend_afternoon_end_time = #{record.attendAfternoonEndTime,jdbcType=TIMESTAMP},
      work_start_time_afternoon = #{record.workStartTimeAfternoon,jdbcType=TIMESTAMP},
      work_end_time_afternoon = #{record.workEndTimeAfternoon,jdbcType=TIMESTAMP},
      attend_after_leave_start_time = #{record.attendAfterLeaveStartTime,jdbcType=TIMESTAMP},
      attend_after_leave_end_time = #{record.attendAfterLeaveEndTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.oa.bean.WorkTime">
    update t_work_time
    <set>
      <if test="attendMorStartTime != null">
        attend_mor_start_time = #{attendMorStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="attendMorEndTime != null">
        attend_mor_end_time = #{attendMorEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="workMorStartTime != null">
        work_mor_start_time = #{workMorStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="workMorEndTime != null">
        work_mor_end_time = #{workMorEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="attendMorLeaveStartTime != null">
        attend_mor_leave_start_time = #{attendMorLeaveStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="attendMorLeaveEndTime != null">
        attend_mor_leave_end_time = #{attendMorLeaveEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="attendAfternoonStartTime != null">
        attend_afternoon_start_time = #{attendAfternoonStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="attendAfternoonEndTime != null">
        attend_afternoon_end_time = #{attendAfternoonEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="workStartTimeAfternoon != null">
        work_start_time_afternoon = #{workStartTimeAfternoon,jdbcType=TIMESTAMP},
      </if>
      <if test="workEndTimeAfternoon != null">
        work_end_time_afternoon = #{workEndTimeAfternoon,jdbcType=TIMESTAMP},
      </if>
      <if test="attendAfterLeaveStartTime != null">
        attend_after_leave_start_time = #{attendAfterLeaveStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="attendAfterLeaveEndTime != null">
        attend_after_leave_end_time = #{attendAfterLeaveEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.oa.bean.WorkTime">
    update t_work_time
    set attend_mor_start_time = #{attendMorStartTime,jdbcType=TIMESTAMP},
      attend_mor_end_time = #{attendMorEndTime,jdbcType=TIMESTAMP},
      work_mor_start_time = #{workMorStartTime,jdbcType=TIMESTAMP},
      work_mor_end_time = #{workMorEndTime,jdbcType=TIMESTAMP},
      attend_mor_leave_start_time = #{attendMorLeaveStartTime,jdbcType=TIMESTAMP},
      attend_mor_leave_end_time = #{attendMorLeaveEndTime,jdbcType=TIMESTAMP},
      attend_afternoon_start_time = #{attendAfternoonStartTime,jdbcType=TIMESTAMP},
      attend_afternoon_end_time = #{attendAfternoonEndTime,jdbcType=TIMESTAMP},
      work_start_time_afternoon = #{workStartTimeAfternoon,jdbcType=TIMESTAMP},
      work_end_time_afternoon = #{workEndTimeAfternoon,jdbcType=TIMESTAMP},
      attend_after_leave_start_time = #{attendAfterLeaveStartTime,jdbcType=TIMESTAMP},
      attend_after_leave_end_time = #{attendAfterLeaveEndTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>